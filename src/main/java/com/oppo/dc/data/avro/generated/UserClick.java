/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.oppo.dc.data.avro.generated;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserClick extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3687773783354449052L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserClick\",\"namespace\":\"com.oppo.dc.data.avro.generated\",\"fields\":[{\"name\":\"imei\",\"type\":[\"null\",\"string\"]},{\"name\":\"time\",\"type\":[\"null\",\"long\"]},{\"name\":\"source\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserClick> ENCODER =
      new BinaryMessageEncoder<UserClick>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserClick> DECODER =
      new BinaryMessageDecoder<UserClick>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<UserClick> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<UserClick> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UserClick>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this UserClick to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a UserClick from a ByteBuffer. */
  public static UserClick fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence imei;
  @Deprecated public java.lang.Long time;
  @Deprecated public java.lang.CharSequence source;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserClick() {}

  /**
   * All-args constructor.
   * @param imei The new value for imei
   * @param time The new value for time
   * @param source The new value for source
   */
  public UserClick(java.lang.CharSequence imei, java.lang.Long time, java.lang.CharSequence source) {
    this.imei = imei;
    this.time = time;
    this.source = source;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return imei;
    case 1: return time;
    case 2: return source;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: imei = (java.lang.CharSequence)value$; break;
    case 1: time = (java.lang.Long)value$; break;
    case 2: source = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'imei' field.
   * @return The value of the 'imei' field.
   */
  public java.lang.CharSequence getImei() {
    return imei;
  }

  /**
   * Sets the value of the 'imei' field.
   * @param value the value to set.
   */
  public void setImei(java.lang.CharSequence value) {
    this.imei = value;
  }

  /**
   * Gets the value of the 'time' field.
   * @return The value of the 'time' field.
   */
  public java.lang.Long getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.Long value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Creates a new UserClick RecordBuilder.
   * @return A new UserClick RecordBuilder
   */
  public static com.oppo.dc.data.avro.generated.UserClick.Builder newBuilder() {
    return new com.oppo.dc.data.avro.generated.UserClick.Builder();
  }

  /**
   * Creates a new UserClick RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserClick RecordBuilder
   */
  public static com.oppo.dc.data.avro.generated.UserClick.Builder newBuilder(com.oppo.dc.data.avro.generated.UserClick.Builder other) {
    return new com.oppo.dc.data.avro.generated.UserClick.Builder(other);
  }

  /**
   * Creates a new UserClick RecordBuilder by copying an existing UserClick instance.
   * @param other The existing instance to copy.
   * @return A new UserClick RecordBuilder
   */
  public static com.oppo.dc.data.avro.generated.UserClick.Builder newBuilder(com.oppo.dc.data.avro.generated.UserClick other) {
    return new com.oppo.dc.data.avro.generated.UserClick.Builder(other);
  }

  /**
   * RecordBuilder for UserClick instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserClick>
    implements org.apache.avro.data.RecordBuilder<UserClick> {

    private java.lang.CharSequence imei;
    private java.lang.Long time;
    private java.lang.CharSequence source;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.oppo.dc.data.avro.generated.UserClick.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.imei)) {
        this.imei = data().deepCopy(fields()[0].schema(), other.imei);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.time)) {
        this.time = data().deepCopy(fields()[1].schema(), other.time);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source)) {
        this.source = data().deepCopy(fields()[2].schema(), other.source);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing UserClick instance
     * @param other The existing instance to copy.
     */
    private Builder(com.oppo.dc.data.avro.generated.UserClick other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.imei)) {
        this.imei = data().deepCopy(fields()[0].schema(), other.imei);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.time)) {
        this.time = data().deepCopy(fields()[1].schema(), other.time);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source)) {
        this.source = data().deepCopy(fields()[2].schema(), other.source);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'imei' field.
      * @return The value.
      */
    public java.lang.CharSequence getImei() {
      return imei;
    }

    /**
      * Sets the value of the 'imei' field.
      * @param value The value of 'imei'.
      * @return This builder.
      */
    public com.oppo.dc.data.avro.generated.UserClick.Builder setImei(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.imei = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'imei' field has been set.
      * @return True if the 'imei' field has been set, false otherwise.
      */
    public boolean hasImei() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'imei' field.
      * @return This builder.
      */
    public com.oppo.dc.data.avro.generated.UserClick.Builder clearImei() {
      imei = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public java.lang.Long getTime() {
      return time;
    }

    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public com.oppo.dc.data.avro.generated.UserClick.Builder setTime(java.lang.Long value) {
      validate(fields()[1], value);
      this.time = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public com.oppo.dc.data.avro.generated.UserClick.Builder clearTime() {
      time = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public java.lang.CharSequence getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public com.oppo.dc.data.avro.generated.UserClick.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.source = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public com.oppo.dc.data.avro.generated.UserClick.Builder clearSource() {
      source = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserClick build() {
      try {
        UserClick record = new UserClick();
        record.imei = fieldSetFlags()[0] ? this.imei : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.time = fieldSetFlags()[1] ? this.time : (java.lang.Long) defaultValue(fields()[1]);
        record.source = fieldSetFlags()[2] ? this.source : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserClick>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserClick>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserClick>
    READER$ = (org.apache.avro.io.DatumReader<UserClick>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
